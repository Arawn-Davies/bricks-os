#----------------------------------------------------------------------------
clean.local:
	$(RM) $(MY_OBJS) $(MY_LIB) $(MY_ELF)

all.local: $(MY_OBJS) $(MY_LIB) $(MY_ELF)


#----------------------------------------------------------------------------
# Create library file from MY_OBJS + MY_LIBS
$(MY_LIB): $(MY_OBJS)
	@echo [AR ] $@
	$(AR) -rc $@ $^

# Create object file from .c file
$(VDIR)%.o: %.c $(VDIR).creation_stamp
	@echo [CC ] $<
	$(CC) $(CFLAGS) $(MY_INCL_PATH) -o $@.S -S $<
	$(CC) $(CFLAGS) $(MY_INCL_PATH) -o $@ -c $<

# Create object file from .cpp file
$(VDIR)%.o: %.cpp $(VDIR).creation_stamp
	@echo [CXX] $<
	$(CXX) $(CXXFLAGS) $(MY_INCL_PATH) -o $@.S -S $<
	$(CXX) $(CXXFLAGS) $(MY_INCL_PATH) -o $@ -c $<

# Create object file from .s file
$(VDIR)%.o: %.s $(VDIR).creation_stamp
	@echo [CC ] $<
	$(CC) -x assembler-with-cpp $(ASFLAGS) $(MY_INCL_PATH) -o $@ -c $<

# Create object file from .S file
$(VDIR)%.o: %.S $(VDIR).creation_stamp
	@echo [CC ] $<
	$(CC) -x assembler-with-cpp $(ASFLAGS) $(MY_INCL_PATH) -o $@ -c $<


#----------------------------------------------------------------------------
# ACE, rules.local.GNU
#----------------------------------------------------------------------------
ifeq ($(OS),"Windows_NT")
$(VDIR).creation_stamp:
	@if not exist $(VDIR) mkdir $(VDIR)
	@echo > $@
else
$(VDIR).creation_stamp:
	@-test -d $(VDIR) || mkdir $(VDIR) $(ACE_NUL_STDERR)
	@touch $@
endif
