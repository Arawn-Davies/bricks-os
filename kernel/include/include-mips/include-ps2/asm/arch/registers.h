#ifndef ASM_ARCH_REGISTERS_H
#define ASM_ARCH_REGISTERS_H


#include "inttypes.h"


// Playstation2 GS General Purpose Registers
#define prim		0x00	// Select and configure current drawing primitive
#define rgbaq		0x01	// Setup current vertex color
#define st		0x02	// ...
#define uv		0x03	// Specify Vertex Texture Coordinates
#define xyzf2		0x04	// Set vertex coordinate
#define xyz2		0x05	// Set vertex coordinate and 'kick' drawing
#define tex0_1		0x06	// Texture Buffer Setup (Context 1)
#define tex0_2		0x07	// Texture Buffer Setup (Context 2)
#define clamp_1		0x08	// ...
#define clamp_2		0x09	// ...
#define fog		0x0a	// ...
#define xyzf3		0x0c	// ...
#define xyz3		0x0d	// ...
#define tex1_1		0x14	// ...
#define tex1_2		0x15	// ...
#define tex2_1		0x16	// ...
#define tex2_2		0x17	// ...
#define xyoffset_1	0x18	// Mapping from Primitive to Window coordinate system (Context 1)
#define xyoffset_2	0x19	// Mapping from Primitive to Window coordinate system (Context 2)
#define prmodecont	0x1a	// ...
#define prmode		0x1b	// ...
#define texclut		0x1c	// ...
#define scanmsk		0x22	// ...
#define miptbp1_1	0x34	// ...
#define miptbp1_2	0x35	// ...
#define miptbp2_1	0x36	// ...
#define miptbp2_2	0x37	// ...
#define texa		0x3b	// ...
#define fogcol		0x3d	// ...
#define texflush	0x3f	// Write to this register before using newly loaded texture
#define scissor_1	0x40	// Setup clipping rectangle (Context 1)
#define scissor_2	0x41	// Setup clipping rectangle (Context 2)
#define alpha_1		0x42	// Setup Alpha Blending Parameters (Context 1)
#define alpha_2		0x43	// Setup Alpha Blending Parameters (Context 2)
#define dimx		0x44	// ...
#define dthe		0x45	// ...
#define colclamp	0x46	// ...
#define test_1		0x47	// ...
#define test_2		0x48	// ...
#define pabe		0x49	// ...
#define fba_1		0x4a	// ...
#define fba_2		0x4b	// ...
#define frame_1		0x4c	// Frame buffer settings (Context 1)
#define frame_2		0x4d	// Frame buffer settings (Context 2)
#define zbuf_1		0x4e	// ...
#define zbuf_2		0x4f	// ...
#define bitbltbuf	0x50	// Setup Image Transfer Between EE and GS
#define trxpos		0x51	// Setup Image Transfer Coordinates
#define trxreg		0x52	// Setup Image Transfer Size
#define trxdir		0x53	// Set Image Transfer Directon + Start Transfer
#define hwreg		0x54	// ...
#define signal		0x60	// ...
#define finish		0x61	// ...
#define label		0x62	// ...

// Playstation2 GS Privileged Registers
#define REG_PMODE             (*(vuint64_t *)(0x12000000)) // Setup CRT Controller
#define REG_SMODE2            (*(vuint64_t *)(0x12000020)) // CRTC Video Settings: PAL/NTCS, Interlace, etc.
#define REG_DISPFB1           (*(vuint64_t *)(0x12000070)) // Setup the CRTC's Read Circuit 1 data source settings
#define REG_DISPLAY1          (*(vuint64_t *)(0x12000080)) // RC1 display output settings
#define REG_DISPFB2           (*(vuint64_t *)(0x12000090)) // Setup the CRTC's Read Circuit 2 data source settings
#define REG_DISPLAY2          (*(vuint64_t *)(0x120000a0)) // RC2 display output settings
#define REG_EXTBUF            (*(vuint64_t *)(0x120000b0))
#define REG_EXTDATA           (*(vuint64_t *)(0x120000c0))
#define REG_EXTWRITE          (*(vuint64_t *)(0x120000d0))
#define REG_BGCOLOR           (*(vuint64_t *)(0x120000e0)) // Set CRTC background color
#define REG_CSR               (*(vuint64_t *)(0x12001000)) // System status and reset
#define REG_IMR               (*(vuint64_t *)(0x12001010)) // Interrupt Mask Register
#define REG_BUSDIR            (*(vuint64_t *)(0x12001040))
#define REG_SIGLBLID          (*(vuint64_t *)(0x12001080))

// Playstation2 DMA Channel Registers
#define REG_GIF_CHCR          (*(vuint32_t *)(0x1000a000)) // GIF Channel Control Register
#define REG_GIF_MADR          (*(vuint32_t *)(0x1000a010)) // Transfer Address Register
#define REG_GIF_QWC           (*(vuint32_t *)(0x1000a020)) // Transfer Size Register (in qwords)
#define REG_GIF_TADR          (*(vuint32_t *)(0x1000a030))


#endif
